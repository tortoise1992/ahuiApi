{"version":3,"sources":["pages/map/baiduMaps/index.js","common/components/Bmap/HotMap.js","pages/map/baiduMaps/Hot.js"],"names":["TabPane","antd_lib_tabs__WEBPACK_IMPORTED_MODULE_10___default","a","BaiduMaps","react__WEBPACK_IMPORTED_MODULE_11___default","createElement","antd_lib_breadcrumb__WEBPACK_IMPORTED_MODULE_3___default","className","Item","antd_lib_card__WEBPACK_IMPORTED_MODULE_1___default","defaultActiveKey","tab","key","_Trail__WEBPACK_IMPORTED_MODULE_12__","_Hot__WEBPACK_IMPORTED_MODULE_13__","Component","BMap","window","BMapLib","HotMap","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initMap","map","Map","state","mapId","makeMap","data","point","Point","lng","lat","centerAndZoom","enableScrollWheelZoom","average","heatmapOverlay","HeatmapOverlay","radius","gradient","0.1","0.2","0.3","0.4","0.5","addOverlay","total","forEach","item","count","Math","ceil","length","setDataSet","max","show","Date","getTime","nextProps","_this2","isObjectValueEqual","setTimeout","nextState","_this3","_react_16_6_3_react_default","id","style","width","height","backgroundColor","NoDataComponent","React","Trail","getData","newData","longitude","latitude","amount","push","setState","Fragment","marginBottom","button_default","onClick","Bmap_HotMap","setCurrentCity"],"mappings":"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","file":"static/js/9.564e9eed.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Breadcrumb, Card, Tabs } from 'antd';\r\nimport Trail from './Trail'\r\nimport Hot from './Hot'\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nclass BaiduMaps extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Breadcrumb  className=\"breadcrumb\">\r\n                    <Breadcrumb.Item>地图</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>百度地图</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div className=\"common-content\">\r\n                    <Card>\r\n                        <Tabs defaultActiveKey=\"1\">\r\n                            <TabPane tab=\"轨迹图\" key=\"1\">\r\n                                <Trail/>\r\n                            </TabPane>\r\n                            <TabPane tab=\"热力图\" key=\"2\">\r\n                                <Hot/>\r\n                            </TabPane>\r\n                        </Tabs>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BaiduMaps;","import React from 'react';\r\nimport NoData from '../NoData/NoDataComponent'; //暂无数据组件\r\nimport { isObjectValueEqual } from '../../../utils'\r\n\r\n/**\r\n * 可接收数据\r\n * data  数据格式[{\"lng\":'12222',\"lat\":'2211',\"count\":'2212'},{\"lng\":'12222',\"lat\":'2211',\"count\":'2212'}]\r\n *          lng: 经度，lat: 纬度， count: 数量\r\n * height: 地图高度， 非必传  默认400\r\n * initMap  百度地图初始化组件 数据格式： function\r\n */\r\n\r\nlet BMap = window.BMap; //  全局获取BMap\r\nlet BMapLib = window.BMapLib; // 全局获取BMapLib\r\n\r\nclass HotMap extends React.Component {\r\n\t\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tconst mapId = 'map' + new Date().getTime();\r\n\t\tthis.state={\r\n\t\t\tmapId\r\n\t\t}\r\n\t}\r\n\t\r\n\tinitMap = () => {\r\n        //无BMap时，比如无网络情况下\r\n        if(!BMap){\r\n            return;\r\n        }\r\n        if(typeof this.props.initMap === 'function'){\r\n            let map = new BMap.Map(this.state.mapId);\r\n            this.props.initMap(map);\r\n        }\r\n    }\r\n\tmakeMap = (data) => {\r\n\t\t//无BMap时，比如无网络情况下\r\n        if(!BMap){\r\n            return;\r\n        }\r\n\t\tlet map = new BMap.Map(this.state.mapId);\r\n\t    let point = new BMap.Point(data[0].lng, data[0].lat);\r\n\t    map.centerAndZoom(point, 17);\r\n\t    map.enableScrollWheelZoom();\r\n\t\tlet heatmapOverlay = new BMapLib.HeatmapOverlay({\r\n            \"radius\":30,\r\n            \"gradient\":{\r\n                .1:'rgb(136, 141, 249)',\r\n                .2:'rgb(115, 233, 250)',\r\n                  .3:'rgb(94, 245, 67)',\r\n                  .4:'rgb(255, 249, 11)',\r\n                  .5:'rgb(255, 10, 0)'\r\n            }\r\n        });\r\n        map.addOverlay(heatmapOverlay);\r\n        \r\n        let average;\r\n\t\tlet total = 0;\r\n\t\tdata.forEach(\r\n\t\t\t(item) => {\r\n\t\t\t\ttotal = total + (item.count - 0)\r\n\t\t\t}\r\n\t\t);\r\n        average = Math.ceil(total / data.length);\r\n        \r\n\t\theatmapOverlay.setDataSet({data:data,max:average});\r\n\t\theatmapOverlay.show();\r\n\t}\r\n\t\r\n\tcomponentWillReceiveProps(nextProps) {\r\n        if (nextProps.data && !isObjectValueEqual(nextProps.data,this.props.data)) {\r\n            setTimeout(() => {\r\n                // 根据停留点，计算移动点，最终生成所有点的百度坐标， 开始路书配置...\r\n                this.makeMap(nextProps.data)\r\n            },50)\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (isObjectValueEqual(nextProps.data,this.props.data)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\t\r\n\tcomponentDidMount(){\r\n        setTimeout(() => {\r\n            // 显示初始化地图方法\r\n            this.initMap()\r\n        },50)\r\n    }\r\n\t\r\n\trender () {\r\n\t\tif (!BMap) {\r\n\t\t\treturn (\r\n                <div style={{ backgroundColor: '#fff' }}><NoData data={'nodata'} height={this.props.height || 400}/></div>\r\n            )\r\n\t\t} else{\r\n\t\t\treturn (\r\n\t\t\t\t<div id={this.state.mapId} style={{width: \"100%\", height: this.props.height || 400}}></div>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default HotMap;","import React, { Component } from 'react';\r\nimport HotMap from '../../../common/components/Bmap/HotMap';\r\nimport { Button } from 'antd';\r\n\r\nclass Trail extends Component {\r\n    state = {\r\n        data: [],\r\n    }\r\n    getData = () => {\r\n        const data = [\r\n            {\"longitude\":118.721777,\"latitude\":32.209229,\"amount\":236},\r\n            {\"longitude\":118.72369,\"latitude\":32.210791,\"amount\":16},\r\n            {\"longitude\":118.722662,\"latitude\":32.210581,\"amount\":16},\r\n            {\"longitude\":118.721642,\"latitude\":32.209538,\"amount\":660}\r\n        ]\r\n        let newData = [];\r\n        data.forEach(\r\n            (item) => {\r\n                newData.push({\r\n                    \"lng\":item.longitude,\r\n                    \"lat\":item.latitude,\r\n                    \"count\": item.amount\r\n                })\r\n            }\r\n        );\r\n        this.setState({data: newData});\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <div style={{marginBottom:20}}>\r\n                    <Button onClick={this.getData}>获取数据</Button>\r\n                </div>\r\n                <HotMap data={this.state.data} initMap={(map)=>{\r\n                    map.enableScrollWheelZoom(true);\r\n                    map.centerAndZoom(new window.BMap.Point(118.888506, 31.928563),18);\r\n                    map.setCurrentCity(\"南京\");\r\n                }}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Trail;"],"sourceRoot":""}